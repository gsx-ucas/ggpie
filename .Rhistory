dplyr::summarise(count = n()) %>%
as.data.frame()
} else {
if (!"count" %in% colnames(data)) {
stop("count column is missing in your data.")
}
}
data = data %>%  dplyr::group_by(across(group_key[1])) %>% dplyr::mutate(Sum=sum(count)) %>% as.data.frame()
# with two group variable, color by subgroup and with single label color
# preapare fill color
all_subgroups = unique(as.character(data[,group_key[2]]))
if(is.null(fill_color)) {
getPalette <- grDevices::colorRampPalette(RColorBrewer::brewer.pal(9, "Set1"))
color_len <- length(all_subgroups)
fill_color <- getPalette(color_len)
} else if(length(fill_color) != length(all_subgroups)) {
stop("The length of fill color is greater than 1 and not equal to group number.")
}
names(fill_color) <- all_subgroups
# prepare label color
if(is.null(label_color)){
label_color="black"
}else if(length(label_color)>1){
label_color = label_color[1]
}
# add tick info
if(show_tick){
# add new row
add_row=data.frame("Tick",NA,0,0)
colnames(add_row) =colnames(data)
data = rbind(add_row,as.data.frame(data)) %>% as.data.frame()
# sort the data
if(sort){
data = data %>% dplyr::arrange(Sum) %>% as.data.frame()
data[,group_key[1]] = factor(data[,group_key[1]],levels = unique(as.character(data[,group_key[1]])))
}
start_pi = -pi / length(levels(data[,group_key[1]]))
data_group_sum=unique(data$Sum)
# create tick break
if(is.null(tick_break)){
tick_df <- data.frame(x = "Tick",y = scales::extended_breaks()(range(data_group_sum)))
}else{
tick_df <- data.frame(x = "Tick",y = tick_break)
}
# create plot
rose_plot = ggplot() +
geom_bar(data=data,mapping = aes_string(x=group_key[1],y="count",fill=group_key[2]),
stat = "identity", color = border_color) +
coord_polar(theta = "x", start = start_pi, clip = "off") +
theme_bw() +
scale_fill_manual(values = fill_color) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
# create donut info
if(!is.null(donut_frac)){
inner_ymin=max(data$Sum) * donut_frac * -1
rose_plot = rose_plot +
geom_text(data = tick_df,
aes(x=x, y=y, label = y), hjust=0) +
scale_y_continuous(breaks = tick_df$y,limits = c(inner_ymin, NA))
if(donut_label){
inner_median=median(1:length(unique(as.character(data[,1]))))
rose_plot = rose_plot + annotate("text", x = inner_median, y = inner_ymin, label = paste0("Total: ", sum(data$Sum)),
size = donut_label_size, colour = donut_label_color)
}
}else{
rose_plot = rose_plot +
geom_text(data = tick_df,
aes(x=x, y=y, label = y), hjust=0) +
scale_y_continuous(breaks = tick_df$y)
}
# add label info
# create label
if(show_label){
# remove other labels
data_group_num=length(levels(data[,group_key[1]]))
x_text=c("Tick",rep("",data_group_num-1))
names(x_text)=levels(data[,group_key[1]])
rose_plot = rose_plot + scale_x_discrete(labels=x_text)
# add label
label_df = data %>% dplyr::select(c(group_key[1],"Sum")) %>% dplyr::distinct()
colnames(label_df)=c("group","Sum")
if(label_info == "count") {
label_df$label <- as.character(label_df$Sum)
} else if(label_info == "ratio") {
label_df$label <- as.character(scales::percent(label_df$Sum / sum(label_df$Sum)))
} else if(label_info == "all") {
label_df$label <- paste0(label_df$Sum, " (", scales::percent(label_df$Sum / sum(label_df$Sum)), ")")
}
label_df$label = paste(label_df$group,label_df$label,sep=label_sep)
# calculate angle
label_df$id=1:nrow(label_df)
angle = 90 - 360 * (label_df$id - 0.5) / nrow(label_df) - start_pi*60
label_df$hjust <- ifelse(angle < -90, 1, 0)
label_df$angle <- ifelse(angle < -90, angle + 180, angle)
if(!is.null(label_gap)){
label_df$Sum=label_df$Sum + label_gap*label_df$Sum
}
rose_plot = rose_plot +
geom_text(data=label_df[label_df$group!="Tick",],
mapping = aes(x = group, y = Sum, label = label, angle = angle,
hjust = hjust),colour = label_color,
show.legend = F,size = label_size)
}
}else{
# sort the data
if(sort){
data = data %>% dplyr::arrange(Sum) %>% as.data.frame()
data[,group_key[1]] = factor(data[,group_key[1]],levels = unique(as.character(data[,group_key[1]])))
}
rose_plot = ggplot() +
geom_bar(data=data,mapping = aes_string(x=group_key[1],y="count",fill=group_key[2]),
stat = "identity", color = border_color) +
coord_polar(theta = "x", start = 0, clip = "off") +
theme_bw() +
scale_fill_manual(values = fill_color) +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
# create donut info
if(!is.null(donut_frac)){
inner_ymin=max(data$Sum) * donut_frac * -1
rose_plot = rose_plot +
scale_y_continuous(limits = c(inner_ymin, NA))
if(donut_label){
inner_median=median(1:length(unique(as.character(data[,1]))))
rose_plot = rose_plot + annotate("text", x = inner_median, y = inner_ymin, label = paste0("Total: ", sum(data$Sum)),
size = donut_label_size, colour = donut_label_color)
}
}
# add label info
# create label
if(show_label){
# remove x tick labels
rose_plot = rose_plot + theme(axis.text.x = element_blank())
# add label
label_df = data %>% dplyr::select(c(group_key[1],"Sum")) %>% dplyr::distinct()
colnames(label_df)=c("group","Sum")
if(label_info == "count") {
label_df$label <- as.character(label_df$Sum)
} else if(label_info == "ratio") {
label_df$label <- as.character(scales::percent(label_df$Sum / sum(label_df$Sum)))
} else if(label_info == "all") {
label_df$label <- paste0(label_df$Sum, " (", scales::percent(label_df$Sum / sum(label_df$Sum)), ")")
}
label_df$label = paste(label_df$group,label_df$label,sep=label_sep)
# calculate angle
label_df$id=1:nrow(label_df)
angle = 90 - 360 * (label_df$id - 0.5) / nrow(label_df)
label_df$hjust <- ifelse(angle < -90, 1, 0)
label_df$angle <- ifelse(angle < -90, angle + 180, angle)
if(!is.null(label_gap)){
label_df$Sum=label_df$Sum + label_gap*label_df$Sum
}
rose_plot = rose_plot +
geom_text(data=label_df,
mapping = aes(x = group, y = Sum, label = label, angle = angle,
hjust = hjust),colour = label_color,
show.legend = F,size = label_size)
}
}
}
}else{
stop("Please provide up to two group variables.")
}
return(rose_plot)
}
ggrosepie(diamonds, group_key = "color", count_type = "full", fill_color = NULL, label_info = "all",
label_color = "black",sort=TRUE,show_tick=T,show_label=T, label_sep="|",label_gap = 0.05,
label_size = 4,donut_frac=0.3,donut_label=TRUE,donut_label_size=3,donut_label_color="red")
PrepareData <- function(data, group_key = NULL, count_type = c("count", "full"), fill_color = NULL, label_info = c("count", "ratio", "all"),
label_split = "[[:space:]]+", label_color = "black") {
# check parameters
count_type <- match.arg(arg = count_type)
label_info <- match.arg(arg = label_info)
# create plot data frame
## get group key
if(is.null(group_key)) {
if(! "group" %in% colnames(data)) {
stop("Group information is missing in your data.")
} else {
group_key <- "group"
}
}
data <- data %>% dplyr::mutate(group = as.character(.data[[group_key]]))
# stat data
if(count_type == "full") {
data <- data %>% dplyr::group_by(group) %>% dplyr::summarise(count = dplyr::n())
} else {
if(! "count" %in% colnames(data)) {
stop("count column is missing in your data.")
}
}
# create label
if(label_info == "count") {
data$label <- as.character(data$count)
} else if(label_info == "ratio") {
data$label <- as.character(scales::percent(data$count / sum(data$count)))
} else if(label_info == "all") {
data$label <- paste0(data$count, " (", scales::percent(data$count / sum(data$count)), ")")
}
# split label
if(!is.null(label_split)) {
data$label <- gsub(pattern = label_split, replacement = "\n", x = data$label)
}
# prepare fill color
all_groups <- unique(as.character(data$group))
if(is.null(fill_color)) {
getPalette <- grDevices::colorRampPalette(RColorBrewer::brewer.pal(9, "Set1"))
color_len <- length(all_groups)
fill_color <- getPalette(color_len)
} else if(length(fill_color) != length(all_groups)) {
stop("The length of fill color is greater than 1 and not equal to group number.")
}
names(fill_color) <- all_groups
# prepare label color
if(is.null(label_color)) {
label_color <- fill_color
} else {
if(length(label_color) == 1) {
label_color <- rep(label_color, length(all_groups))
} else if(length(label_color) != length(all_groups)) {
stop("The length of label color is greater than 1 and not equal to group number.")
}
names(label_color) <- all_groups
}
plot.data <- list(data = data, fill_color = fill_color, label_color = label_color)
return(plot.data)
}
ggrosepie(diamonds, group_key = "color", count_type = "full", fill_color = NULL, label_info = "all",
label_color = "black",sort=TRUE,show_tick=T,show_label=T, label_sep="|",label_gap = 0.05,
label_size = 4,donut_frac=0.3,donut_label=TRUE,donut_label_size=3,donut_label_color="red")
ggrosepie(diamonds, group_key = "color", count_type = "full", fill_color = NULL, label_info = "all",
label_color = "black",sort=TRUE,show_tick=F,show_label=T, label_sep="|",label_gap = 0.05,
label_size = 4,donut_frac=0.3,donut_label=TRUE,donut_label_size=3,donut_label_color="red")
# show tick and with specific break
ggrosepie(diamonds, group_key = "color", count_type = "full", fill_color = NULL, label_info = "all",
label_color = "black",sort=TRUE,show_tick=T,tick_break = c(3000,5000,7000,11000),show_label=T, label_sep="|",label_gap = 0.05,
label_size = 4,donut_frac=0.3,donut_label=TRUE,donut_label_size=3,donut_label_color="red")
# two group variable, and do not show tick
ggrosepie(diamonds, group_key = c("color","clarity"), count_type = "full", label_info = "all",
donut_frac=0.3,donut_label_size=3)
# two group variable, and do not show tick
ggrosepie(diamonds, group_key = c("color","clarity"), count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
# two group variable, show tick and with automatic selection
ggrosepie(diamonds, group_key = c("color","clarity"), count_type = "full", label_info = "all",
donut_frac=0.3,donut_label_size=3)
# two group variable, show tick and with specific break
ggrosepie(diamonds, group_key = c("color","clarity"), count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
styler::style_pkg()
186-73+1
226-85+1
401-90+1
188
326-232+1
60
156-69+1
456-69+1
114+142+312+188+95+62+388
devtools::document()
devtools::check()
devtools::check()
library(ggpie)
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
library(tidyverse)
data("diamonds")
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
p1_gt <- ggplot_gtable(ggplot_build(p1))
p1_gt$layout$clip[p1_gt$layout$name == "panel"] <- "off"
p1_gt
library(ggplotify)
p1_new=as.ggplot(p1_gt)
p1_new
p1_gt <- ggplot_gtable(ggplot_build(p1))
p1_gt$layout$clip[p1_gt$layout$name == "panel"] <- "off"
library(ggplotify)
p1_new=as.ggplot(p1_gt)
p2_gt <- ggplot_gtable(ggplot_build(p2))
p2_gt$layout$clip[p2_gt$layout$name == "panel"] <- "off"
p2_new=as.ggplot(p2_gt)
cowplot::plot_grid(p1_new,p2_new)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
styler::style_pkg()
devtools::document()
devtools::check()
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
donut_frac=0.3,donut_label_size=3)
ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",show_label = F,
donut_frac=0.3,donut_label_size=3)
ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",show_label = F,
donut_frac=0.3,donut_label_size=3,donut_label = F)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
tick_break = c(3000,5000,7000,11000), donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
# pie plot
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
show_tick=F,donut_frac=NULL)
# donut plot
p2=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",
show_tick=F,donut_frac=0.3,donut_label_size=3)
cowplot::plot_grid(p1,p2)
ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",
donut_frac=NULL)
ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",show_label = F,
donut_frac=NULL)
getwd()
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",show_label = F,
donut_frac=0.3,donut_label_size=3,donut_label = F)
ggsave("rosepie.png", plot=p1,bg = "transparent")
ggsave("rosepie.png", plot=p1,bg = "transparent")
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",show_label = F,
donut_frac=NULL)
ggsave("rosepie2.png", plot=p2,bg = "transparent")
ggsave("rosepie.png", p1,bg = "transparent")
ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",show_label = F,
donut_frac=0.3,donut_label_size=3,donut_label = F) +
theme(
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_rect(fill='transparent'),
legend.box.background = element_rect(fill='transparent')
)
ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",show_label = F,
donut_frac=0.3,donut_label_size=3,donut_label = F) +
theme(
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA),
legend.background = element_rect(fill='transparent'),
legend.box.background = element_rect(fill='transparent')
)
p1=ggrosepie(diamonds, group_key = c("color","clarity"),
count_type = "full", label_info = "all",show_label = F,
donut_frac=0.3,donut_label_size=3,donut_label = F) +
theme(
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA),
legend.background = element_rect(fill='transparent'),
legend.box.background = element_rect(fill='transparent')
)
ggsave("rosepie.png", p1,bg = "transparent")
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",show_label = F,
donut_frac=NULL) +
theme(
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA),
legend.background = element_rect(fill='transparent'),
legend.box.background = element_rect(fill='transparent')
ggsave("rosepie2.png", p2,bg = "transparent")
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",show_label = F,
donut_frac=NULL) +
theme(
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA),
legend.background = element_rect(fill='transparent'),
legend.box.background = element_rect(fill='transparent')
)
p2=ggrosepie(diamonds, group_key = "color", count_type = "full", label_info = "all",show_label = F,
donut_frac=NULL) +
theme(
panel.background = element_rect(fill='transparent'),
plot.background = element_rect(fill='transparent', color=NA),
legend.background = element_rect(fill='transparent'),
legend.box.background = element_rect(fill='transparent')
)
ggsave("rosepie2.png", p2,bg = "transparent")
